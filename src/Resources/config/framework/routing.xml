<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
            <argument type="service" id="file_locator" />
        </service>

        <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
            <call method="addLoader">
                <argument type="service" id="routing.loader.yml" />
            </call>
        </service>

        <service id="routing.loader" class="Symfony\Component\Config\Loader\DelegatingLoader">
            <argument type="service" id="routing.resolver" />
        </service>

        <service id="router" class="Symfony\Component\Routing\Router" public="false">
            <argument type="service" id="routing.loader" />
            <argument>%kernel.root_dir%/config/routing.yml</argument>
            <argument type="collection">
                <argument key="cache_dir">%kernel.cache_dir%</argument>
                <argument key="debug">%kernel.debug%</argument>
            </argument>
            <argument type="service" id="router.request_context" on-invalid="ignore" />
            <argument type="service" id="logger" on-invalid="ignore" />

            <call method="setConfigCacheFactory">
                <argument type="service" id="config_cache_factory" />
            </call>

            <tag name="monolog.logger" channel="router" />
        </service>

        <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false" />

        <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
            <argument type="service" id="router" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="router.request_context" on-invalid="ignore" />
            <argument type="service" id="logger" on-invalid="ignore" />

            <tag name="kernel.event_subscriber" />
            <tag name="monolog.logger" channel="request" />
        </service>
    </services>
</container>
